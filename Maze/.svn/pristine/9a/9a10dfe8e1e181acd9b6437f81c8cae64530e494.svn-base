package falstad;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class MazeBuilderEllerTest {
	
	MazeStub mazeStub; //// reference to the mazeStub that is constructed, results are returned by calling mazeStub.newMaze(..)
		
	@Before
	public void setUp() throws InterruptedException{
		
		mazeStub = new MazeStub();
		//TODO Modify difficulty of build, will generate some different stuff
		mazeStub.buildWithEller(1); //this then calls Mazebuilder.build() which then calls init and initializes builder attributes
		//run() is also called and sets up a maze
		mazeStub.mazebuilder.buildThread.join(); //we wait for this thread to die before we continue with test
		
	}
	
	@Test
	public void configTest() {
		//MazeBuilder m1 = new MazeBuilder(true);
		assertNotNull(mazeStub.mazebuilder.cells);
		assertNotNull(mazeStub.mazebuilder.dists);
		assertNotNull(mazeStub.mazebuilder.height);
		assertNotNull(mazeStub.mazebuilder.width);
		assertNotNull(mazeStub.mazebuilder.startx);
		assertNotNull(mazeStub.mazebuilder.starty);
		
	}

	@Test
	public void testGeneratePathways() {
		
		fail("Not yet implemented");
	}

	@Test
	public void testRun() {
		fail("Not yet implemented");
	}

}
